// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bets.proto

package bets

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateBetRequest struct {
	GameId               int32    `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerAddress        string   `protobuf:"bytes,2,opt,name=player_address,json=playerAddress,proto3" json:"player_address,omitempty"`
	RefAddress           string   `protobuf:"bytes,3,opt,name=ref_address,json=refAddress,proto3" json:"ref_address,omitempty"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	RollUnder            int32    `protobuf:"varint,5,opt,name=roll_under,json=rollUnder,proto3" json:"roll_under,omitempty"`
	Seed                 string   `protobuf:"bytes,6,opt,name=seed,proto3" json:"seed,omitempty"`
	CreateTrxHash        string   `protobuf:"bytes,7,opt,name=create_trx_hash,json=createTrxHash,proto3" json:"create_trx_hash,omitempty"`
	CreateTrxLt          int64    `protobuf:"varint,8,opt,name=create_trx_lt,json=createTrxLt,proto3" json:"create_trx_lt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBetRequest) Reset()         { *m = CreateBetRequest{} }
func (m *CreateBetRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBetRequest) ProtoMessage()    {}
func (*CreateBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa99872e6a2a7bdc, []int{0}
}

func (m *CreateBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBetRequest.Unmarshal(m, b)
}
func (m *CreateBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBetRequest.Marshal(b, m, deterministic)
}
func (m *CreateBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBetRequest.Merge(m, src)
}
func (m *CreateBetRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBetRequest.Size(m)
}
func (m *CreateBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBetRequest proto.InternalMessageInfo

func (m *CreateBetRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *CreateBetRequest) GetPlayerAddress() string {
	if m != nil {
		return m.PlayerAddress
	}
	return ""
}

func (m *CreateBetRequest) GetRefAddress() string {
	if m != nil {
		return m.RefAddress
	}
	return ""
}

func (m *CreateBetRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreateBetRequest) GetRollUnder() int32 {
	if m != nil {
		return m.RollUnder
	}
	return 0
}

func (m *CreateBetRequest) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

func (m *CreateBetRequest) GetCreateTrxHash() string {
	if m != nil {
		return m.CreateTrxHash
	}
	return ""
}

func (m *CreateBetRequest) GetCreateTrxLt() int64 {
	if m != nil {
		return m.CreateTrxLt
	}
	return 0
}

type CreateBetResponse struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateBetResponse) Reset()         { *m = CreateBetResponse{} }
func (m *CreateBetResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBetResponse) ProtoMessage()    {}
func (*CreateBetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa99872e6a2a7bdc, []int{1}
}

func (m *CreateBetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBetResponse.Unmarshal(m, b)
}
func (m *CreateBetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBetResponse.Marshal(b, m, deterministic)
}
func (m *CreateBetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBetResponse.Merge(m, src)
}
func (m *CreateBetResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBetResponse.Size(m)
}
func (m *CreateBetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBetResponse proto.InternalMessageInfo

func (m *CreateBetResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateBetResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type UpdateBetRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GameId               int32    `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	RandomRoll           int32    `protobuf:"varint,3,opt,name=random_roll,json=randomRoll,proto3" json:"random_roll,omitempty"`
	Signature            string   `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	PlayerPayout         int64    `protobuf:"varint,5,opt,name=player_payout,json=playerPayout,proto3" json:"player_payout,omitempty"`
	RefPayout            int64    `protobuf:"varint,6,opt,name=ref_payout,json=refPayout,proto3" json:"ref_payout,omitempty"`
	ResolveTrxHash       string   `protobuf:"bytes,7,opt,name=resolve_trx_hash,json=resolveTrxHash,proto3" json:"resolve_trx_hash,omitempty"`
	ResolveTrxLt         int64    `protobuf:"varint,8,opt,name=resolve_trx_lt,json=resolveTrxLt,proto3" json:"resolve_trx_lt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBetRequest) Reset()         { *m = UpdateBetRequest{} }
func (m *UpdateBetRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBetRequest) ProtoMessage()    {}
func (*UpdateBetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa99872e6a2a7bdc, []int{2}
}

func (m *UpdateBetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBetRequest.Unmarshal(m, b)
}
func (m *UpdateBetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBetRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBetRequest.Merge(m, src)
}
func (m *UpdateBetRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBetRequest.Size(m)
}
func (m *UpdateBetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBetRequest proto.InternalMessageInfo

func (m *UpdateBetRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateBetRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *UpdateBetRequest) GetRandomRoll() int32 {
	if m != nil {
		return m.RandomRoll
	}
	return 0
}

func (m *UpdateBetRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *UpdateBetRequest) GetPlayerPayout() int64 {
	if m != nil {
		return m.PlayerPayout
	}
	return 0
}

func (m *UpdateBetRequest) GetRefPayout() int64 {
	if m != nil {
		return m.RefPayout
	}
	return 0
}

func (m *UpdateBetRequest) GetResolveTrxHash() string {
	if m != nil {
		return m.ResolveTrxHash
	}
	return ""
}

func (m *UpdateBetRequest) GetResolveTrxLt() int64 {
	if m != nil {
		return m.ResolveTrxLt
	}
	return 0
}

type UpdateBetResponse struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ResolvedAt           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=resolved_at,json=resolvedAt,proto3" json:"resolved_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateBetResponse) Reset()         { *m = UpdateBetResponse{} }
func (m *UpdateBetResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBetResponse) ProtoMessage()    {}
func (*UpdateBetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa99872e6a2a7bdc, []int{3}
}

func (m *UpdateBetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBetResponse.Unmarshal(m, b)
}
func (m *UpdateBetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBetResponse.Marshal(b, m, deterministic)
}
func (m *UpdateBetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBetResponse.Merge(m, src)
}
func (m *UpdateBetResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateBetResponse.Size(m)
}
func (m *UpdateBetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBetResponse proto.InternalMessageInfo

func (m *UpdateBetResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateBetResponse) GetResolvedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ResolvedAt
	}
	return nil
}

type IsBetExistRequest struct {
	GameId               int32    `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TrxHash              string   `protobuf:"bytes,2,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
	TrxLt                int64    `protobuf:"varint,3,opt,name=trx_lt,json=trxLt,proto3" json:"trx_lt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBetExistRequest) Reset()         { *m = IsBetExistRequest{} }
func (m *IsBetExistRequest) String() string { return proto.CompactTextString(m) }
func (*IsBetExistRequest) ProtoMessage()    {}
func (*IsBetExistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa99872e6a2a7bdc, []int{4}
}

func (m *IsBetExistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBetExistRequest.Unmarshal(m, b)
}
func (m *IsBetExistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBetExistRequest.Marshal(b, m, deterministic)
}
func (m *IsBetExistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBetExistRequest.Merge(m, src)
}
func (m *IsBetExistRequest) XXX_Size() int {
	return xxx_messageInfo_IsBetExistRequest.Size(m)
}
func (m *IsBetExistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBetExistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsBetExistRequest proto.InternalMessageInfo

func (m *IsBetExistRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *IsBetExistRequest) GetTrxHash() string {
	if m != nil {
		return m.TrxHash
	}
	return ""
}

func (m *IsBetExistRequest) GetTrxLt() int64 {
	if m != nil {
		return m.TrxLt
	}
	return 0
}

type IsBetExistResponse struct {
	Yes                  bool     `protobuf:"varint,1,opt,name=yes,proto3" json:"yes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBetExistResponse) Reset()         { *m = IsBetExistResponse{} }
func (m *IsBetExistResponse) String() string { return proto.CompactTextString(m) }
func (*IsBetExistResponse) ProtoMessage()    {}
func (*IsBetExistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa99872e6a2a7bdc, []int{5}
}

func (m *IsBetExistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBetExistResponse.Unmarshal(m, b)
}
func (m *IsBetExistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBetExistResponse.Marshal(b, m, deterministic)
}
func (m *IsBetExistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBetExistResponse.Merge(m, src)
}
func (m *IsBetExistResponse) XXX_Size() int {
	return xxx_messageInfo_IsBetExistResponse.Size(m)
}
func (m *IsBetExistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBetExistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsBetExistResponse proto.InternalMessageInfo

func (m *IsBetExistResponse) GetYes() bool {
	if m != nil {
		return m.Yes
	}
	return false
}

func init() {
	proto.RegisterType((*CreateBetRequest)(nil), "bets.CreateBetRequest")
	proto.RegisterType((*CreateBetResponse)(nil), "bets.CreateBetResponse")
	proto.RegisterType((*UpdateBetRequest)(nil), "bets.UpdateBetRequest")
	proto.RegisterType((*UpdateBetResponse)(nil), "bets.UpdateBetResponse")
	proto.RegisterType((*IsBetExistRequest)(nil), "bets.IsBetExistRequest")
	proto.RegisterType((*IsBetExistResponse)(nil), "bets.IsBetExistResponse")
}

func init() { proto.RegisterFile("bets.proto", fileDescriptor_aa99872e6a2a7bdc) }

var fileDescriptor_aa99872e6a2a7bdc = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdf, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0xd7, 0xa4, 0x4d, 0x9b, 0xeb, 0x56, 0x3a, 0x4b, 0x6c, 0xa1, 0x02, 0xad, 0x0a, 0x30,
	0xf5, 0xa9, 0x93, 0xc6, 0x13, 0x42, 0x42, 0x6a, 0x11, 0x12, 0x93, 0xf6, 0x80, 0xac, 0xed, 0x95,
	0xe0, 0x92, 0xeb, 0x0f, 0x29, 0xad, 0x83, 0xed, 0xa0, 0xf6, 0x5f, 0xe0, 0x81, 0xff, 0x8b, 0xff,
	0x0a, 0xe5, 0x9c, 0xa4, 0xd9, 0x2a, 0x04, 0x6f, 0xf6, 0xd7, 0xdf, 0x3b, 0xdf, 0x7d, 0x7c, 0x06,
	0x98, 0xa1, 0xd1, 0xe3, 0x54, 0x49, 0x23, 0x59, 0x33, 0x5f, 0x0f, 0x2e, 0x16, 0x52, 0x2e, 0x12,
	0xbc, 0x22, 0x6d, 0x96, 0xcd, 0xaf, 0xcc, 0x6a, 0x8d, 0xda, 0x88, 0x75, 0x6a, 0x6d, 0xe1, 0x4f,
	0x07, 0xfa, 0x1f, 0x14, 0x0a, 0x83, 0x53, 0x34, 0x1c, 0xbf, 0x67, 0xa8, 0x0d, 0x3b, 0x87, 0xf6,
	0x42, 0xac, 0x31, 0x5a, 0xc5, 0x41, 0x63, 0xd8, 0x18, 0xb5, 0xb8, 0x97, 0x6f, 0x6f, 0x62, 0xf6,
	0x1a, 0x7a, 0x69, 0x22, 0x76, 0xa8, 0x22, 0x11, 0xc7, 0x0a, 0xb5, 0x0e, 0x9c, 0x61, 0x63, 0xe4,
	0xf3, 0x13, 0xab, 0x4e, 0xac, 0xc8, 0x2e, 0xa0, 0xab, 0x70, 0x5e, 0x79, 0x5c, 0xf2, 0x80, 0xc2,
	0x79, 0x69, 0x38, 0x03, 0x4f, 0xac, 0x65, 0xb6, 0x31, 0x41, 0x73, 0xd8, 0x18, 0xb9, 0xbc, 0xd8,
	0xb1, 0x17, 0x00, 0x4a, 0x26, 0x49, 0x94, 0x6d, 0x62, 0x54, 0x41, 0x8b, 0xee, 0xf6, 0x73, 0xe5,
	0x3e, 0x17, 0x18, 0x83, 0xa6, 0x46, 0x8c, 0x03, 0x8f, 0x12, 0xd2, 0x9a, 0x5d, 0xc2, 0x93, 0x6f,
	0x54, 0x7f, 0x64, 0xd4, 0x36, 0x5a, 0x0a, 0xbd, 0x0c, 0xda, 0xb6, 0x26, 0x2b, 0xdf, 0xa9, 0xed,
	0x27, 0xa1, 0x97, 0x2c, 0x84, 0x93, 0x9a, 0x2f, 0x31, 0x41, 0x87, 0x6e, 0xee, 0x56, 0xae, 0x5b,
	0x13, 0x7e, 0x81, 0xd3, 0x1a, 0x0b, 0x9d, 0xca, 0x8d, 0x46, 0xd6, 0x03, 0xa7, 0xe0, 0xe0, 0x72,
	0x67, 0x15, 0xb3, 0xb7, 0x00, 0x36, 0x26, 0x8e, 0x84, 0xa1, 0xfe, 0xbb, 0xd7, 0x83, 0xb1, 0xe5,
	0x3c, 0x2e, 0x39, 0x8f, 0xef, 0x4a, 0xce, 0xdc, 0x2f, 0xdc, 0x13, 0x13, 0xfe, 0x72, 0xa0, 0x7f,
	0x9f, 0xc6, 0x0f, 0x61, 0xef, 0xf3, 0xb7, 0x28, 0x7f, 0x0d, 0xbe, 0xf3, 0x00, 0x7e, 0x4e, 0x55,
	0x6c, 0x62, 0xb9, 0x8e, 0x72, 0x22, 0x44, 0xb5, 0xc5, 0xc1, 0x4a, 0x5c, 0x26, 0x09, 0x7b, 0x0e,
	0xbe, 0x5e, 0x2d, 0x36, 0xc2, 0x64, 0x0a, 0x09, 0xac, 0xcf, 0xf7, 0x02, 0x7b, 0x09, 0xc5, 0x2b,
	0x45, 0xa9, 0xd8, 0xc9, 0xcc, 0x10, 0x5e, 0x97, 0x1f, 0x5b, 0xf1, 0x33, 0x69, 0xf4, 0x00, 0x38,
	0x2f, 0x1d, 0x1e, 0x39, 0x7c, 0x85, 0xf3, 0xe2, 0x78, 0x04, 0x7d, 0x85, 0x5a, 0x26, 0x3f, 0x0e,
	0x68, 0xf7, 0x0a, 0xbd, 0xc4, 0xfd, 0x0a, 0x7a, 0x75, 0x67, 0xc5, 0xfb, 0x78, 0xef, 0xbb, 0x35,
	0xe1, 0x57, 0x38, 0xad, 0xf1, 0xf8, 0x0b, 0xf0, 0x77, 0xf9, 0x34, 0x51, 0xd0, 0x7f, 0x12, 0x87,
	0xd2, 0x3e, 0xa1, 0x27, 0xbd, 0xd1, 0x53, 0x34, 0x1f, 0xb7, 0x2b, 0xfd, 0xef, 0xf9, 0x7e, 0x06,
	0x9d, 0xaa, 0x2f, 0x3b, 0xd9, 0x6d, 0x53, 0x34, 0xf4, 0x14, 0xbc, 0xa2, 0x11, 0x97, 0x2a, 0x6b,
	0x19, 0xea, 0xe0, 0x12, 0x58, 0x3d, 0x7f, 0xd1, 0x42, 0x1f, 0xdc, 0x1d, 0x6a, 0x4a, 0xde, 0xe1,
	0xf9, 0xf2, 0xfa, 0x77, 0x03, 0x9a, 0x53, 0x34, 0x9a, 0xbd, 0x07, 0xbf, 0x9a, 0x31, 0x76, 0x36,
	0xa6, 0x1f, 0xfb, 0xf8, 0x03, 0x0e, 0xce, 0x0f, 0x74, 0x9b, 0x38, 0x3c, 0xca, 0xe3, 0x2b, 0x64,
	0x65, 0xfc, 0xe3, 0x99, 0x2a, 0xe3, 0x0f, 0xd8, 0x86, 0x47, 0x6c, 0x02, 0xb0, 0x2f, 0x98, 0x15,
	0xc6, 0x03, 0x44, 0x83, 0xe0, 0xf0, 0xa0, 0x4c, 0x31, 0xf3, 0x88, 0xf9, 0x9b, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xce, 0x3b, 0xe8, 0x22, 0x6f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BetsClient is the client API for Bets service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BetsClient interface {
	CreateBet(ctx context.Context, in *CreateBetRequest, opts ...grpc.CallOption) (*CreateBetResponse, error)
	UpdateBet(ctx context.Context, in *UpdateBetRequest, opts ...grpc.CallOption) (*UpdateBetResponse, error)
	IsBetExist(ctx context.Context, in *IsBetExistRequest, opts ...grpc.CallOption) (*IsBetExistResponse, error)
}

type betsClient struct {
	cc grpc.ClientConnInterface
}

func NewBetsClient(cc grpc.ClientConnInterface) BetsClient {
	return &betsClient{cc}
}

func (c *betsClient) CreateBet(ctx context.Context, in *CreateBetRequest, opts ...grpc.CallOption) (*CreateBetResponse, error) {
	out := new(CreateBetResponse)
	err := c.cc.Invoke(ctx, "/bets.Bets/CreateBet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *betsClient) UpdateBet(ctx context.Context, in *UpdateBetRequest, opts ...grpc.CallOption) (*UpdateBetResponse, error) {
	out := new(UpdateBetResponse)
	err := c.cc.Invoke(ctx, "/bets.Bets/UpdateBet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *betsClient) IsBetExist(ctx context.Context, in *IsBetExistRequest, opts ...grpc.CallOption) (*IsBetExistResponse, error) {
	out := new(IsBetExistResponse)
	err := c.cc.Invoke(ctx, "/bets.Bets/IsBetExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BetsServer is the server API for Bets service.
type BetsServer interface {
	CreateBet(context.Context, *CreateBetRequest) (*CreateBetResponse, error)
	UpdateBet(context.Context, *UpdateBetRequest) (*UpdateBetResponse, error)
	IsBetExist(context.Context, *IsBetExistRequest) (*IsBetExistResponse, error)
}

// UnimplementedBetsServer can be embedded to have forward compatible implementations.
type UnimplementedBetsServer struct {
}

func (*UnimplementedBetsServer) CreateBet(ctx context.Context, req *CreateBetRequest) (*CreateBetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBet not implemented")
}
func (*UnimplementedBetsServer) UpdateBet(ctx context.Context, req *UpdateBetRequest) (*UpdateBetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBet not implemented")
}
func (*UnimplementedBetsServer) IsBetExist(ctx context.Context, req *IsBetExistRequest) (*IsBetExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsBetExist not implemented")
}

func RegisterBetsServer(s *grpc.Server, srv BetsServer) {
	s.RegisterService(&_Bets_serviceDesc, srv)
}

func _Bets_CreateBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BetsServer).CreateBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bets.Bets/CreateBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BetsServer).CreateBet(ctx, req.(*CreateBetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bets_UpdateBet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BetsServer).UpdateBet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bets.Bets/UpdateBet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BetsServer).UpdateBet(ctx, req.(*UpdateBetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bets_IsBetExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsBetExistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BetsServer).IsBetExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bets.Bets/IsBetExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BetsServer).IsBetExist(ctx, req.(*IsBetExistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bets_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bets.Bets",
	HandlerType: (*BetsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBet",
			Handler:    _Bets_CreateBet_Handler,
		},
		{
			MethodName: "UpdateBet",
			Handler:    _Bets_UpdateBet_Handler,
		},
		{
			MethodName: "IsBetExist",
			Handler:    _Bets_IsBetExist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bets.proto",
}
